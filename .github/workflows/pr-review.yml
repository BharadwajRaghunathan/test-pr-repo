name: ü§ñ PR Review Agent

on:
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - '**.py'  # Only run on Python files

jobs:
  pr-review:
    name: üîç Automated Code Review
    runs-on: ubuntu-latest
    
    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: üêç Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: üì¶ Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint flake8

    - name: üîç Run Analysis
      run: |
        echo "ü§ñ Starting PR Review Analysis..."
        
        # Get changed Python files
        CHANGED_FILES=$(git diff --name-only origin/main...HEAD | grep '\.py$' | head -10)
        
        if [ -z "$CHANGED_FILES" ]; then
          echo "No Python files changed."
          exit 0
        fi
        
        echo "üìÅ Files to analyze: $CHANGED_FILES"
        
        # Initialize counters
        TOTAL_ISSUES=0
        
        # Analyze each file
        for file in $CHANGED_FILES; do
          if [ -f "$file" ]; then
            echo "üîç Analyzing $file..."
            
            # Run pylint
            PYLINT_ISSUES=$(pylint "$file" --output-format=text 2>/dev/null | wc -l || echo "0")
            
            # Run flake8
            FLAKE8_ISSUES=$(flake8 "$file" 2>/dev/null | wc -l || echo "0")
            
            FILE_ISSUES=$((PYLINT_ISSUES + FLAKE8_ISSUES))
            TOTAL_ISSUES=$((TOTAL_ISSUES + FILE_ISSUES))
            
            echo "  üìä Found $FILE_ISSUES issues in $file"
            
            # Show some actual issues
            echo "  üîç Pylint issues:"
            pylint "$file" --output-format=text 2>/dev/null | head -5 || echo "    None"
            
            echo "  üîç Flake8 issues:"
            flake8 "$file" 2>/dev/null | head -5 || echo "    None"
          fi
        done
        
        echo ""
        echo "üéØ ANALYSIS COMPLETE"
        echo "üìä Total Issues Found: $TOTAL_ISSUES"
        echo "üìÅ Files Analyzed: $(echo $CHANGED_FILES | wc -w)"
        
        # Create GitHub summary
        cat >> $GITHUB_STEP_SUMMARY << EOF
        ## ü§ñ PR Review Results
        
        **Total Issues:** $TOTAL_ISSUES  
        **Files Analyzed:** $(echo $CHANGED_FILES | wc -w)  
        
        ### üìÑ Analyzed Files:
        EOF
        
        for file in $CHANGED_FILES; do
          if [ -f "$file" ]; then
            echo "- \`$file\`" >> $GITHUB_STEP_SUMMARY
          fi
        done
        
        # Set exit code based on issues
        if [ $TOTAL_ISSUES -gt 10 ]; then
          echo "‚ùå Too many issues ($TOTAL_ISSUES). Please fix critical issues."
          exit 1
        elif [ $TOTAL_ISSUES -gt 0 ]; then
          echo "‚ö†Ô∏è  Issues found but not blocking merge."
          exit 0
        else
          echo "‚úÖ No issues found! Great code quality."
          exit 0
        fi

    - name: üí¨ Comment on PR (if issues found)
      if: failure()
      uses: actions/github-script@v6
      with:
        script: |
          const comment = `## ü§ñ Automated PR Review Results
          
          ‚ö†Ô∏è **Issues were found in this PR that should be addressed before merging.**
          
          Please check the [Actions tab](${context.payload.repository.html_url}/actions/runs/${context.runId}) for detailed analysis results.
          
          ### üõ†Ô∏è Recommended Actions:
          1. Run \`pip install pylint flake8\`
          2. Fix reported issues locally:
             - \`pylint your_file.py\`
             - \`flake8 your_file.py\`
          3. Push your fixes
          4. This check will re-run automatically
          
          ---
          *This review was automatically generated by PR Review Agent* üöÄ`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });
